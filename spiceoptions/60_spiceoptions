#!/usr/bin/python

import os
import sys
import hooking
import traceback
import ast

'''
Hook to configure spice options on a vm

For ex:

Syntax:
   spiceoptions={'element': {'attribute': 'value'},..

For ex:
   spiceoptions={'image': {'compression': 'auto_glz'},
                 'jpeg': {'compressions': 'never'},
                 'streaming':{'mode':'filter'},
                 'clipboard':{'copypaste':'yes'}}..etc


  <graphics type='spice' port='-1' tlsPort='-1' autoport='yes'>
     ******
    <image compression='auto_glz'/>
    <streaming mode='filter'/>
    <clipboard copypaste='no'/>
    <mouse mode='client'/>
  </graphics>
'''


imageCompList = ['auto_glz', 'auto_lz', 'quic', 'glz', 'lz', 'off']

jpegCompList = ['auto', 'never', 'always']

zlibCompList = ['auto', 'never', 'always']

copyPaste = ['yes', 'no']

strModeList = ['filter', 'all', 'off']

mouseModeList = ['server', 'client']

spiceDict = {'image': {'compression': imageCompList}, 'jpeg': {'compression': jpegCompList}, 'streaming': {'mode': strModeList}, 'mouse': {'mode': mouseModeList}, 'clipboard': {'copypaste': copyPaste}}


def createOptionElement(domxml, attrname, attroption, attrvalue):
    if attrname == "jpeg":
        jpegEle = domxml.createElement(attrname)
        if attrvalue in jpegCompList:
            jpegEle.setAttribute(attroption, attrvalue)
            return jpegEle
        else:
            sys.stderr.write("\n InValid option:%s \t Available options are %s" % (attrvalue, jpegCompList))
    elif attrname == "zlib":
        zlibEle = domxml.createElement(attrname)
        if attrvalue in zlibCompList:
            zlibEle.setAttribute(attroption, attrvalue)
            return zlibEle
        else:
            sys.stderr.write("\n InValid option:%s \t Available options are %s" % (attrvalue, zlibCompList))
    elif attrname == "image":
        imageEle = domxml.createElement(attrname)
        if attrvalue in imageCompList:
            imageEle.setAttribute(attroption, attrvalue)
            return imageEle
        else:
            sys.stderr.write("\n InValid option:%s \t Available options are %s" % (attrvalue, imageCompList))
    elif attrname == "streaming":
        streamEle = domxml.createElement(attrname)
        if attrvalue in strModeList:
            streamEle.setAttribute(attroption, attrvalue)
            return streamEle
        else:
            sys.stderr.write("\n InValid option:%s \t Available options are %s" % (attrvalue, strModeList))
    elif attrname == "mouse":
        mouseEle = domxml.createElement(attrname)
        if attrvalue in mouseModeList:
            mouseEle.setAttribute(attroption, attrvalue)
            return mouseEle
        else:
            sys.stderr.write("\n InValid option:%s \t Available options are %s" % (attrvalue, mouseModeList))

    elif attrname == "clipboard":
        clipEle = domxml.createElement(attrname)
        if attrvalue in copyPaste:
            clipEle.setAttribute(attroption, attrvalue)
            return clipEle
        else:
            sys.stderr.write("\n InValid option:%s \t Available options are %s" % (attrvalue, copyPaste))
    else:
        sys.stderr.write('\n No Valid Element created for graphic device :%s\n' % (attrname))


if 'spiceoptions' in os.environ:
    try:
        attrName = ''
        attrVal = ''
        attrOpt = ''
        domxml = hooking.read_domxml()
        spiceOpt = ast.literal_eval(os.environ['spiceoptions'])
        spiceOpt = dict((k.lower(), v) for k, v in spiceOpt.iteritems())
        for graphDev in domxml.getElementsByTagName('graphics'):
            graphType = graphDev.getAttribute('type')
            if graphType == 'spice':
                for key, value in spiceOpt.items():
                    if key not in spiceDict.keys():
                        sys.stderr.write('\n Invalid KEY:%s \n' % (key,))
                    else:
                        for ak, bk in value.items():
                            if ak not in spiceDict[key].keys():
                                sys.stderr.write('\n Invalid KEY in :%s[%s] options are:%s \n' % (key, ak, spiceDict[key].keys()))

                            else:
                                returnEle = createOptionElement(
                                    domxml, key, ak, value[ak])
                            if returnEle:
                                graphDev.appendChild(returnEle)

        hooking.write_domxml(domxml)
    except:
        sys.stderr.write('spiceoptions: [unexpected error]: %s\n' %
                         traceback.format_exc())
        sys.exit(2)
